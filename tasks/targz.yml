---
- name: Install iproute2 on ubuntu to gather facts properly
  # https://stackoverflow.com/questions/41469740/ansible-default-ipv4-address-undefined-in-docker-ubuntu
  block:
    - name: install iproute
      apt:
        name: iproute2
        state: present
    - name: Recollect facts
      ansible.builtin.setup:
        gather_subset:
          - all
    # таска для проверки, что ip теперь можно получить
    # - debug: msg="{{ hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] }}"
  when: ansible_distribution == "Ubuntu"

- name: Install Elasticsearch on Docker
  block:

    - name: Get Elasticsearch tar.gz
      get_url:
        #403
        #url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz
        url: https://ntl.run0ut.ru/cicd/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz
        dest: "/tmp/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz"
        mode: 0755
        validate_certs: false
        checksum: md5:b00c00932e4d75f72f8a9dc007faae26
      # changed_when: false
      delegate_to: localhost
      register: get_elasticsearch
      until: get_elasticsearch is succeeded
    - name: Copy Elasticsearch to manage host
      copy:
        src: "/tmp/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz"
        mode: 0755
        dest: "/tmp/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz"

    - name: Create directrory for Elasticsearch
      become: true
      file:
        state: directory
        path: "{{ elasticsearch_home }}"
        mode: 0755
    - name: Extract Elasticsearch in the installation directory
      become: true
      unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elasticsearch_version }}-linux-x86_64.tar.gz"
        dest: "{{ elasticsearch_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elasticsearch_home }}/bin/elasticsearch"

    - name: Configure Elasticsearch
      become: true
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0644
      loop:
        - { src: "elasticsearch.yml.j2" , dest: "{{ elasticsearch_home }}/config/elasticsearch.yml" }
        - { src: "jvm.options.j2" , dest: "{{ elasticsearch_home }}/config/jvm.options" }

    - name: Set environment Elasticsearch
      become: true
      template:
        src: templates/elasticsearch.sh.j2
        dest: /etc/profile.d/elasticsearch.sh
        mode: 0755

- name: Prepare users, folders, etc
  block:

    - name: Create group
      group:
        name: elasticsearch
        state: present
    - name: Create user
      ansible.builtin.user:
        name: elasticsearch
        group: elasticsearch
        state: present

    - name: Create directories
      file:
        state: directory
        mode: 0755
        path: "{{ item }}"
      loop:
        - "{{ elasticsearch_logs }}"
        - "{{ elasticsearch_home }}"
    - name: Set permissions
      file:
        owner: elasticsearch
        group: elasticsearch
        state: directory
        recurse: yes
        path: "{{ item }}"
      loop:
        - "{{ elasticsearch_logs }}"
        - "{{ elasticsearch_home }}"

- name: restart Elasticsearch binary
  block:
    - name: restart Elasticsearch binary on docker
      shell:
        cmd: docker exec -u elasticsearch -d -it {{ ansible_nodename }} bash /etc/profile.d/elasticsearch.sh
      changed_when: false
      delegate_to: 127.0.0.1
  rescue:
    - name: restart Elasticsearch binary on podman
      shell:
        cmd: podman exec -u elasticsearch -d -it {{ ansible_nodename }} bash /etc/profile.d/elasticsearch.sh
      changed_when: false
      delegate_to: 127.0.0.1
